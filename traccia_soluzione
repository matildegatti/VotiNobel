INPUT:
- Insieme di oggetti di tipo Esame(PARTENZA)
- numero crediti (m)

OUTPUT:
- Insieme (Set) di Esame, sottoinsieme di partenza, tale che la somma di Esame.crediti()==m e la media Esame.voto() sia MAX

APPROCCIO 1 (più stupido)
Ad ogni livello (L) della ricorsione aggiungo un esame --> devo decidere quale , li provo tutti (simile ad anagrammi)

-SOLUZIONE PARZIALE 
	PARZIALE = sottoinsieme di esattamente L elementi, con L=livello della ricorsione
-GENERAZIONE SOLUZIONE PARZIALE
	per tutti i casi che non ho ancora considerato (tutti gli esami non ancora compresi in PARZIALE):
		* provo ad aggiungere
		* faccio andare avanti la ricorsione
		* faccio backtracking
		
		L=0 --> ho N scelte possibili 
			PARZIALE = {e1}
				L=1
					PARZIALE = {e1,e2}
					PARZIALE = {e1,e3}
					[...]
			PARZIALE = {e2}
			[...]
			PARZIALE = {en}
			
- CASI TERMINALI
	* L = PARTENZA.size()  --> non ci sono più esami da aggiungere
	  Controllo soluzione parziale: 
	  	- se PARZIALE.sommaCrediti() == m
	  		+ se PARZIALE.media() > di tutte le medie viste fino ad ora --> tengo traccia di PARZIALE
	  	- se PARZIALE.sommaCrediti() != m
	  		+ abbandono la ricorsione, soluzione non valida
	  		
	* PARZIALE.sommaCrediti() >= m --> mi fermo subito!
		- se > m --> scarto parziale e non vado avanti
		- se = m --> controllo soluzione parziale, se è migliore di quelle precedenti ne tengo traccia
		
APPROCCIO 2	
- LIVELLO DELLA RICORSIONE (L)   (complessità 2^N)
	--> indica quale corso sto decidendo di mettere (o non mettere) nella soluzione
	
	supponiamo di avere PARTENZA = {e1,e2,..,en}
	L=0 --> considero e1
		* lo metto --> PARZIALE = {e1}
			L=1 --> considero e2
				* lo metto --> PARZIALE ={e1,e2}
				* non lo metto --> PARZIALE = {e1}
		* non lo metto --> PARZIALE = {}
			L=1 --> considero e2
				*lo metto --> PARZIALE = {e2}
				*non lo metto = {}
	  	